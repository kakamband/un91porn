<template>
	<view class="content">
		<view class="primary_view">
			1024
		</view>
		<view class="uni-form-item uni-column">
			<input type="text" class="uni-input" v-model="username" placeholder="账号" @blur="checkUsername"/>
		</view>
		<!-- <view class="uni-form-item uni-column column-with-btn">
			<input type="text" class="uni-input" name="" placeholder="图片验证码" v-model="captchaImg" />
			<image src="/static/captcha.jpg" mode="" class="img-captcha"></image>
		</view>
		<view class="uni-form-item uni-column column-with-btn">
			<input type="number" class="uni-input" name="" placeholder="请输入验证码" />
			<button :class="{active : !disableCodeBtn}" class="codeButton" :disabled="disableCodeBtn" @tap="sendCode">{{codeBtn.text}}</button>
		</view> -->
		<view class="uni-form-item uni-column">
			<input type="password" class="uni-input" v-model="password" placeholder="密码" />
		</view>
		<view class="uni-form-item uni-column">
			<input type="text" class="uni-input" v-model="email" placeholder="邮箱" />
		</view>
		<view class="primary_view">
			<button class="button_primary" type="primary" @tap="register">注册</button>
		</view>
		<view class="links"><text class="link-highlight links_view" @tap="gotoLogin">已有账号？点此登陆</text></view>
	</view>
</template>

<script>
	import {
		friendlyDate,decrypt,encrypt
	} from '@/common/util.js';
	export default {
		data() {
			return {
				captchaImg: '',
				seconds: 10,
				codeBtn: {
					text: '获取验证码',
					waitingCode: false,
					count: this.seconds
				},
				username:'',
				email:'',
				password:''
			}
		},
		onLoad() {

		},
		methods: {
			checkUsername(){
				if (this.username == '') {
					return;
				}
				uni.request({
					url: getApp().globalData.apiUrl+'/user/checkUsername', 
					data: {
						username: this.username
					},
					method:"POST",
					success: (result) => {
						console.log(result)
						if(result.data.errorCode !='1001'){
							uni.showModal({
							    title: '提示',
							    content: result.data.errorMessage,
								showCancel:false,
							    success: function (res) {
							    }
							});
						}
					},
					fail: (err) => {
						console.log(err);
						uni.showToast({
							title:'服务器好像开小差了'
						})
					}
				});
			},
			register(){
				if (this.username == '') {
					return;
				}
				uni.request({
					url: getApp().globalData.apiUrl+'/user/save', 
					data: {
						username: this.username,
						email: this.email,
						password: encrypt(this.password)
					},
					header: {
					   'content-type': 'application/json'
					},
					method:"POST",
					success: (result) => {
						console.log(result)
						if(result.data.errorCode=='1001'){
							uni.setStorageSync('userInfo', JSON.stringify(result.data.data));
							uni.switchTab({
								url:'/pages/info/userCenter'
							})
						}else{
							uni.showModal({
							    title: '提示',
							    content: result.data.errorMessage,
								showCancel:false,
							    success: function (res) {
							    }
							});
						}
					},
					fail: (err) => {
						console.log(err);
						uni.showToast({
							title:'服务器好像开小差了'
						})
					}
				});
			},
			sendCode: function () {
				this.codeBtn.waitingCode = true;
				this.codeBtn.count = this.seconds;
				this.codeBtn.text = this.codeBtn.count + 's';
				
				let countdown = setInterval( () => {
					this.codeBtn.count--;
					this.codeBtn.text = this.codeBtn.count + 's';
					if( this.codeBtn.count < 0 ){
						clearInterval(countdown);
						this.codeBtn.text = '重新发送';
						this.codeBtn.waitingCode = false;
					}
				},1000);
			},
			gotoLogin: function () {
				uni.redirectTo({
					url: '/pages/info/login'
				})
			}
		},
		computed: {
			disableCodeBtn: function (){
				return this.codeBtn.waitingCode || this.captchaImg.length < 4;
			} 
		}
	}
</script>

<style lang="scss" scoped>
	.codeButton{
		font-size: 28rpx;
		width: 300rpx;
	}
	.content{
		padding: 260upx 100upx 100upx;
	}
	.logo{
		font-size: 48rpx;
		font-weight: bold;
	    text-align: center;
	}
	.uni-form-item{
		margin-bottom: 40upx;
		padding: 0;
		border-bottom-color: #e3e3e3;
		border-bottom-width: 1px;
	}
	.uni-input{
		border-radius: 5;
		height: 78upx;
	}
	.column-with-btn{
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
	}
	.button{
		font-size: 24upx;
		margin: 0;
		width: 180upx;
		text-align: center;
	}
	.img-captcha{
		width: 150upx;
		height: 60upx;
	}
	.button_primary{
		font-size: 34upx;
		width: 380upx;
		height: 90upx;
		border-radius: 20%;
	}
	.links{
		display: flex;
		align-items: center;
		justify-content: center;
		margin-top: 40upx;
	}
	.primary_view{
		display: flex;
		align-items: center;
		justify-content: center;
		padding-bottom: 50rpx;
		font-size: 60rpx;
	}
	.links_view{
		font-size: 30rpx;
		margin: 0 10upx;
		padding: 0 20upx;
		color: #999;
	}
</style>
