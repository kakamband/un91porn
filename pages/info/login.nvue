<template>
	<view class="content">
		<view class="primary_view">
			<text style="font-size: 50rpx;"></text>
		</view>
		<view class="uni-form-item uni-column">
			<input type="text" class="uni-input" focus v-model="username" placeholder="91账号" />
		</view>
		<view class="uni-form-item uni-column">
			<input type="password" password class="uni-input" v-model="password" placeholder="密码" />
		</view>
		<view class="uni-form-item uni-column" style="display: flex;flex-direction: row;">
			<input type="text" class="uni-input" style="width: 300rpx;" v-model="captchaInput" placeholder="验证码" />
			<image :src="apiUrl+'/captcha.php'" style="width: 160rpx;height: 80rpx;margin-left: 20rpx;"></image>
		</view>
		<view class="primary_view">
			<button class="primary" type="primary" @tap="login">登陆</button>
		</view>
	</view>
</template>

<script>
	import {
			friendlyDate,decrypt,encrypt
		} from '@/common/util.js';
	import htmlParser from '@/common/html-parser'
	import cookies from 'weapp-cookie'
	export default {
		data() {
			return {
				username:'',
				password:'',
				captchaInput:'',
				apiUrl:'',
				isLogin:false,
				user:{
					uid:'',
					uname:''
				}
			}
		},
		onShow() {
		},
		onHide() {
		},
		onLoad() {
			this.apiUrl = getApp().globalData.apiUrl
			this.getIndex()
		},
		methods: {
			getIp(){
				return Math.floor(Math.random()*255)+'.'+Math.floor(Math.random()*255)+'.'+Math.floor(Math.random()*255)+'.'+Math.floor(Math.random()*255);
			},
			login(){
				cookies.clearCookies()
				//console.log(cookies.getCookies())
				uni.request({
					url: getApp().globalData.apiUrl+'/login.php',
					header: {
						'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.92 Safari/537.36', //自定义请求头信息
						//'X-Forwarded-For':this.getIp(),
						'Referer':getApp().globalData.apiUrl+'/login.php',
						'Accept-Language':'zh-CN,zh;q=0.9,en;q=0.8,und;q=0.7',
						'Origin':getApp().globalData.apiUrl,
						'Accept-Encoding':'gzip, deflate',
						'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
						'Upgrade-Insecure-Requests':'1',
						'Content-Type':'application/x-www-form-urlencoded',
						'Cookie':getApp().globalData.cookie
					},
					data: {
						"username":this.username,
						"password":this.password,
						"fingerprint":this.randomFingerprint(),
						"fingerprint2":this.randomFingerprint2(),
						"captcha_input":this.captchaInput,
						"action_login":"Log In",
						"submit":"提交"
					},
					method:"POST",
					success: (res) => {
						this.getUserInfo()
					},
					fail: (err) => {
						this.isLogin= false
						console.log(err.errMsg);
					},
					complete(){
						this.isLogin = true;
					}
				});
			},
			getIndex(){
				cookies.clearCookies()
				//console.log(cookies.getCookies())
				uni.request({
					url: getApp().globalData.apiUrl+'/index.php',
					data: {},
					header: {
							'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36', //自定义请求头信息
							//'X-Forwarded-For':this.getIp(),
							'Referer':getApp().globalData.apiUrl+'/index.php',
							'Accept-Language':'zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4'
					},
					success: (res) => {
						this.login()
					},
					fail: (err) => {
						console.log(err)
					}
				});
			},
			getCookie(res){
				
				let cookie = getApp().globalData.cookie
				if(cookie == ''){
					getApp().globalData.cookie = JSON.stringify(res.header['Set-Cookie'])
				}else{
					getApp().globalData.cookie = cookie + ";" +JSON.stringify(res.header['Set-Cookie'])
				}
			},
			getUserInfo(){
				cookies.clearCookies()
				//console.log(cookies.getCookies())
					uni.request({
						url: getApp().globalData.apiUrl+'/index.php',
						data: {},
						header: {
								'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36', //自定义请求头信息
								//'X-Forwarded-For':this.getIp(),
								'Referer':getApp().globalData.apiUrl+'/index.php',
								'Accept-Language':'zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4'
						},
						success: (res) => {
							console.log(res.data.indexOf('退出'))
						},
						fail: (err) => {
							console.log(err)
						}
					});
				
				/* if (html.indexOf('退出')== -1) {
					uni.showModal({
						title: '提示',
						content: '登录失败',
						success: function (res) {
						}
					});
					return;
				}
				let doc = htmlParser(html.toString().trim());
				let authorInfoHtmlStr = doc.getElementsByTagName('a')[0];
				let uname = authorInfoHtmlStr.innerHTML
				this.user.uname = uname
				console.log(uname)
				//用户id 从首页视频详情获取
				this.getIndexVideo() */
			},
			getIndexVideo(){
				let url = getApp().globalData.apiUrl + "/v.php?category=hot&viewtype=basic";;
				uni.request({
					url: url,
					data: {},
					header: {
							'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36', //自定义请求头信息
							//'X-Forwarded-For':this.getIp(),
							'Referer':getApp().globalData.apiUrl+'/index.php',
							'Accept-Language':'zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4'
					},
					success: (res) => {
						console.log(res.statusCode);
						let videos = this.parseVideo(res.data)
						console.log(videos.length);
						if(videos.length>0){
							 let videoLink = videos[0].link
							 this.getVideoDetail(videoLink)
						}
					},
					fail: (err) => {
						console.log(err.errMsg)
					}
				})
			},
			parseVideo(html){
				let videoArray = new Array();
				let videoKeyArray = new Array();
				let doc = htmlParser(html.toString().trim());
				let videoListHtml = doc.getElementsByClassName('col-xs-12');
				for(var i=0;i<videoListHtml.length;i++){
					let htmlstr =  videoListHtml[i].innerHTML
					let videoHtml = htmlParser(htmlstr);
					let linkHtml = videoHtml.getElementsByTagName('a')[0];
					let imgHtml = videoHtml.getElementsByTagName('img')[0];
					let durationHtml = videoHtml.getElementsByClassName('duration')[0];
					let titleHtml = videoHtml.getElementsByClassName('video-title')[0];
					let infoHtml = htmlstr.substring(htmlstr.indexOf('添加时间'),htmlstr.indexOf('积分'))
					linkHtml = linkHtml.tagContent
					imgHtml = imgHtml.tagContent
					let link = linkHtml.replace('<a href="','').replace('">','')
					let imageUrl = imgHtml.substring(imgHtml.indexOf('https'),imgHtml.lastIndexOf('"'))
					let duration = durationHtml.innerHTML;
					let title = titleHtml.innerHTML;
					let extInfo = this.getSimpleText(infoHtml);
					let video = new Object();
					video.link = link;;
					video.imageUrl = imageUrl;
					video.duration = duration;
					video.title = title;
					video.extInfo = "时长:"+duration+extInfo;
					video.isCollected = 0
					let videoKey = link.substring(link.indexOf("=") + 1, link.indexOf("&") != -1 ? link.indexOf("&") : link.length);
					video.videoKey = videoKey
					videoArray.push(video)
					videoKeyArray.push(videoKey)
				}
				return videoArray
			},
			getVideoDetail(url) {
				uni.request({
				    url: url,
				    data: {},
					header: {
						'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36', //自定义请求头信息
						//'X-Forwarded-For':this.getIp(),
						'Referer':getApp().globalData.apiUrl+'/index.php',
						'Accept-Language':'zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4'
					},
				    success: (res) => {
						let statusCode = res.statusCode
						console.log(statusCode);
						const userId = this.getUserId(res.data.toString().trim());
						this.user.uid = userId
						console.log(userId)
						if (this.user.uid == '' || this.user.uname=='') {
							uni.showModal({
								title: '提示',
								content: '登录失败',
								success: function (res) {
								}
							});
						}else{
							uni.setStorageSync('userInfo', JSON.stringify(this.user));
							uni.switchTab({
							    url: "/pages/info/userCenter"
							});
						}
						
				    },
					fail: (err) => {
						console.log(err.errMsg);
					}
				});
				
			},
			getUserId(html){
				let doc = htmlParser(html.toString().trim());
				let UIDDoc = doc.getElementById('UID');
				let uid = UIDDoc.innerHTML
				return uid
			},
			getSimpleText(html){
				let re1 = new RegExp("<.+?>","g");
				let msg = html.replace(re1,'');
				msg = msg.replace(new RegExp(/&nbsp;/g),' ').replace(/[\r\n]/g,"").replace(/\ +/g,"")
				return msg;
			},
			randomCaptcha(){
				let keys = "0123456789";
				let length = 4;
				let key = '';
				for (let i = 0; i < length; i++) {
					let pos = parseInt(Math.random() * keys.length);
					pos = parseInt(Math.floor(pos));
					key = key + keys.charAt(pos);
				}
				return key.toString();
			},
			randomFingerprint(){
				let keys = "0123456789";
				let key = '';
				for (let i = 0; i < keys.length; i++) {
					let pos = parseInt(Math.random() * keys.length);
					pos = parseInt(Math.floor(pos));
					key = key + keys.charAt(pos);
				}
				return key.toString();
			},
			randomFingerprint2(){
				let keys = "abcdefghijklmnopqrstuvwxyz0123456789";
				let keyLength = 32;
				let key = '';
				for (let i = 0; i < keyLength; i++) {
					let pos = parseInt(Math.random() * keys.length);
					pos = parseInt(Math.floor(pos));
					key = key + keys.charAt(pos);
				}
				return key.toString();
			}
		}
	}
</script>

<style>
	page{
	}
	.content{
		padding: 260upx 100upx 100upx;
	}
	.logo{
	    text-align: center;
		font-size: 48rpx;
		font-weight: bold;
	}
	.uni-form-item{
		margin-bottom: 40upx;
	}
	.uni-input{
		border-width: 1rpx;
		border-color:#e2e2e2;
		border-radius: 3%;
		height: 78upx;
	}
	.primary_view{
		text-align: center;
		align-items: center;
		justify-content: center;
		margin-top: 20upx;
		padding-bottom: 50rpx;
		font-size: 60rpx;
	}
	.primary{
		border-radius: 0;
		font-size: 30upx;
		width: 380upx;
		height: 90upx;
		border-radius: 20;
	}
	.links{
		margin-top: 20upx;
		font-size: 36upx;
		color: #999;
		display: flex;
		flex-direction: row;
		justify-content: center;
		align-items: center;
	}
	.link-highlight{
		color: #5777c2;
	}
	.links_view{
		font-size: 30rpx;
		margin: 0 10upx;
		padding: 0 20upx;
		color: #999;
	}
	.links_view_line{
		font-size: 30rpx;
		color: #999;
	}
</style>
